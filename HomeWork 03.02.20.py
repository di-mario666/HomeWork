"""
Задание 1. Создать программно файл в текстовом формате, записать в него построчно данные, вводимые пользователем.
Об окончании ввода данных свидетельствует пустая строка.
"""
# Создание файла
f = open("text.txt", "w", encoding="utf-8")
f.close()

# Запись данных в файл
rec_f = open("text.txt", "w")
rec_f.write("Hello\n this is a very difficult lesson for me\n\n")
rec_f.close()

"""
Задание 2. Создать текстовый файл (не программно), сохранить в нем несколько строк, 
выполнить подсчет количества строк, количества слов в каждой строке.
"""
f = open("text2.txt", "r")
for line in f.readlines():
    print(f"строка стихотворения: {len(line) - 1} символов")
f.close()

"""
Задание 3. Создать текстовый файл (не программно), построчно записать фамилии сотрудников и величину их окладов. 
Определить, кто из сотрудников имеет оклад менее 20 тыс., вывести фамилии этих сотрудников. 
Выполнить подсчет средней величины дохода сотрудников. 
"""
f = open("text3.txt", "r", encoding="utf-8")
values = []
person = 0
for line in f.readlines():
    key, value = line.split()
    if int(value) < 20000:
        print(f"у {key} оклад меньше 20000")
    values.append(int(value))
    person += 1
print(f"Средний оклад {(sum(values) / person)}")

"""
Задание 4. Создать (не программно) текстовый файл со следующим содержимым:
One — 1
Two — 2
Three — 3
Four — 4
Необходимо написать программу, открывающую файл на чтение и считывающую построчно данные. 
При этом английские числительные должны заменяться на русские. 
Новый блок строк должен записываться в новый текстовый файл. 
"""
rus = {'One': 'Один', 'Two': 'Два', 'Three': 'Три', 'Four': 'Четыре'}
new_file = []
with open('text4.txt', 'r') as f:
    for i in f:
        i = i.split(" ", 1)
        new_file.append(rus[i[0]] + '  ' + i[1])  # иероглиф вЂ” какой- то появляется, не могу от него избавиться
    print(new_file)
f.close()

with open('text4.2.txt', 'w') as f_2:
    f_2.writelines(new_file)


"""
Задание 5. Создать (программно) текстовый файл, записать в него программно набор чисел, разделенных пробелами. 
Программа должна подсчитывать сумму чисел в файле и выводить ее на экран.
"""

def summary():
    try:
        with open('text5.txt', 'w') as f:
            line = input('Введи числа через пробел \n')
            f.writelines(line)
            my_numb = line.split()

            print(sum(map(int, my_numb)))
    except IOError:
        print('Ошибка в файле')
    except ValueError:
        print('Неправильно набран числа. Ошибка ввода-вывода')

summary()

"""
Задание 6.Необходимо создать (не программно) текстовый файл, 
где каждая строка описывает учебный предмет и наличие лекционных, практических и лабораторных занятий по этому предмету и их количество. 
Важно, чтобы для каждого предмета не обязательно были все типы занятий. 
Сформировать словарь, содержащий название предмета и общее количество занятий по нему. Вывести словарь на экран.
Примеры строк файла:

Информатика: 100(л) 50(пр) 20(лаб).
Физика: 30(л) — 10(лаб)
Физкультура: — 30(пр) —
Пример словаря:

{“Информатика”: 170, “Физика”: 40, “Физкультура”: 30}
"""

# ВЫДАЕТ КАКУЮ ТО ОШИБКУ! НЕ МОГУ РАЗОБРАТЬСЯ КАК ЕЁ ИСПРАВИТЬ

import json

subj = {}
with open('text6.txt', 'r') as f:
    for line in f:
        subject, lecture, practice, lab = line.split()
        subj[subject] = int(lecture) + int(practice) + int(lab)
    print(f'Общее количество часов по предмету - \n {subj}')

"""
Задание 7. Создать (не программно) текстовый файл, в котором каждая строка должна содержать данные о фирме: название, форма собственности, выручка, издержки.
Пример строки файла: firm_1 ООО 10000 5000.
Необходимо построчно прочитать файл, вычислить прибыль каждой компании, а также среднюю прибыль. 
Если фирма получила убытки, в расчет средней прибыли ее не включать.
Далее реализовать список. Он должен содержать словарь с фирмами и их прибылями, а также словарь со средней прибылью. 
Если фирма получила убытки, также добавить ее в словарь (со значением убытков).
Пример списка: [{“firm_1”: 5000, “firm_2”: 3000, “firm_3”: 1000}, {“average_profit”: 2000}].
Итоговый список сохранить в виде json-объекта в соответствующий файл.
Пример json-объекта:

[{"firm_1": 5000, "firm_2": 3000, "firm_3": 1000}, {"average_profit": 2000}]
Подсказка: использовать менеджеры контекста.
"""


"""
 НЕ ВЫПОЛНИЛ. ВРОДЕ ВСЕ ШЛО ХОРОШО, но какие то ошибки возникают, не смог бороться с ними
Пример ошибки:

return codecs.charmap_decode(input,self.errors,decoding_table)[0]
UnicodeDecodeError: 'charmap' codec can't decode byte 0x98 in position 122: character maps to <undefined>
"""